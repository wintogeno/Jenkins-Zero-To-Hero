pipeline{
    agent{
        docker{
             image 'abhishekf5/maven-abhishek-docker-agent:v1'
             args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }        
    }
    stages{
        stage('Checkout')
        {
            steps{
                sh "echo passed"
            }
        }
        stage('Build and test')
        {
            steps{
                sh "ls -ltr"
                sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app/ && mvn clean package"

            }
        } 
        stage('Static code Anyalsis')
        {
           environment{
            SONAR_URL="http://192.168.10.161:9000"
           }
        }
          steps{
              withCredentials([string(credenetialsId:'sonar-token', variable: 'SONAR_AUTH_TOKEN')]){
                sh 'cd cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
              }
          }
    
    }
}


// pipeline 
// {
//     agent
//      {
//         docker {
//             image 'abhishekf5/maven-abhishek-docker-agent:v1'
//             args '--user root -v /var/run/docker.sock:/var/run/docker.sock'


//         }
//     }

//     stages {
//         stage ('Checkout'){
//             steps{
//                 sh "echo passed"
//             }
//         }
//     }
// }
//         stage ("Build and Test"){
//             steps{
//                 sh "ls -ltr"
//                 // build the project and create a jar file
//                 sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package"

//             }

//         }
//         stage("Static Code Analysis") {
//           environment {
//            SONAR_URL = "http://3.76.219.70:9000"
//        }
//           steps {
//              script {
//               withCredentials([string(credentialsId: 'JSonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
//                 sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
//             }
//         }
//     }
// }

//         stage('Build and Push Docker Image') {
//             environment {
//                 DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
//                 REGISTRY_CREDENTIALS =credentials("docker-cred")
//             }
//             steps{
//                 script{
//                     sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
//                     def dockerImage=docker.image("${DOCKER_IMAGE}")
//                     docker.withRegistry('http://index.docker.io/v1/',"docker-cred"){
//                         dockerImage.push()
//                     }

//                 }
//             }
//         }
//         stage("update and Deployment File")
//         {
//             environment {
//                GIT_REPO_NAME ="Jenkins-Zero-To-Hero"
//                GIT_USER_NAME="Wintogeno" 
//             }

//             steps {
//                 withCredentials({string(credentialsId:'github',variable:'GITHUB_TOKEN')}){
//                     sh ''' 
//                       git config user.email "muneem361@gmail.com"
//                       git config user.name "Wintogeno"
//                       BUILD_NUMBER=${BUILD_NUMBER} 
//                       sed -i "s/replaceImageTag/${BUILD_NUMBER}/g"  java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                       git add   java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                       git commit -m " update the Image Tag ${BUILD_NUMBER}"
//                       git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
//                       '''

//                 }
//             }
//         }
//     }
// }
